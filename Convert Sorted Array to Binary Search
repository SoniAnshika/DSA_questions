/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
  TreeNode* convertToBalancedBST(vector<int>& nums , int start , int end) {
    // base case
    if( start > end)
        return NULL;
    
    int mid = start + (end-start)/2;
    TreeNode* root = new TreeNode(nums[mid]);
    
    root->left = convertToBalancedBST(nums, start , mid -1);    
    root->right = convertToBalancedBST(nums, mid+1 , end);
    
    return root;
}

TreeNode* sortedArrayToBST(vector<int>& nums) {
    if( nums.size() == 0 )
        return NULL;
    
    int start = 0 , end = nums.size() -1; 
    
    return convertToBalancedBST(nums, start, end );
    
}
};
