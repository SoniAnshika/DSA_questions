class Solution {
private:
    string join(vector<string> tempIP){
        string IP = tempIP[0];
        for(int i=1; i<4; ++i)
            IP = IP + "." + tempIP[i];
        return IP;
    }
    void helper(vector<string> &result, vector<string> &tempIP, string &s, int idx){
        if((int)tempIP.size() == 4){
            if(idx == s.length())
                result.push_back(join(tempIP));
            return;
        }
        for(int i=idx; i<s.length(); ++i){
            if(s[idx]=='0' && i>idx) return;  //01, 
            if(stoi(s.substr(idx, i-idx+1)) > 255) return;  //256
            tempIP.push_back(s.substr(idx, i-idx+1));
            helper(result, tempIP, s, i+1);
            tempIP.pop_back();
        }
    }
public:
    vector<string> restoreIpAddresses(string s) {
        if(s.length() < 4 || s.length() > 13) return {};
        vector<string> result;
        vector<string> tempIP;
        helper(result, tempIP, s, 0);
        return result;
    }
};
